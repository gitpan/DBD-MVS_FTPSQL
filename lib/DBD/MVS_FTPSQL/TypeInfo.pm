# Don't forget to add version and intellectual property control information.

# The %type_info_all hash was automatically generated by
# DBI::DBD::Metadata::write_typeinfo_pm v1.05.

package DBD::MVS_FTPSQL::TypeInfo;

{
    require Exporter;
    require DynaLoader;
    @ISA = qw(Exporter DynaLoader);
    @EXPORT = qw(type_info_all);
    use DBI qw(:sql_types);

    $type_info_all = [
        {
            TYPE_NAME          =>  0,
            DATA_TYPE          =>  1,
            COLUMN_SIZE        =>  2,
            LITERAL_PREFIX     =>  3,
            LITERAL_SUFFIX     =>  4,
            CREATE_PARAMS      =>  5,
            NULLABLE           =>  6,
            CASE_SENSITIVE     =>  7,
            SEARCHABLE         =>  8,
            UNSIGNED_ATTRIBUTE =>  9,
            FIXED_PREC_SCALE   => 10,
            AUTO_UNIQUE_VALUE  => 11,
            LOCAL_TYPE_NAME    => 12,
            MINIMUM_SCALE      => 13,
            MAXIMUM_SCALE      => 14,
            SQL_DATA_TYPE      => 15,
            SQL_DATETIME_SUB   => 16,
            NUM_PREC_RADIX     => 17,
            INTERVAL_PRECISION => 18,
        },
        [ "BIGINT",                     -5,                20,        "", "", "",                     1,0,2,0,1,0,"",0,0, -5,               0,10,0, ],
        [ "BLOB",                       SQL_LONGVARBINARY, 2147483647,"", "", "(length)",             1,1,1,0,0,0,"",0,0, SQL_LONGVARBINARY,0,0, 0, ],
        [ "CLOB",                       SQL_LONGVARCHAR,   2147483647,"", "", "(length)",             1,1,1,0,0,0,"",0,0, SQL_LONGVARCHAR,  0,0, 0, ],
        [ "LONGVARCHAR () FOR BIT DATA",SQL_LONGVARCHAR,   32704,     "'","'","(length) FOR BIT DATA",1,1,3,0,0,0,"",0,0, SQL_LONGVARCHAR,  0,0, 0, ],
        [ "VARCHAR () FOR BIT DATA",    SQL_VARBINARY,     254,       "'","'","(length) FOR BIT DATA",1,1,3,0,0,0,"",0,0, SQL_VARBINARY,    0,0, 0, ],
        [ "CHARacter () FOR BIT DATA",  SQL_BINARY,        255,       "'","'","(length) FOR BIT DATA",1,1,3,0,0,0,"",0,0, SQL_BINARY,       0,0, 0, ],
        [ "CHARacter",                  SQL_CHAR,          255,       "'","'","(length)",             1,1,3,0,0,0,"",0,0, SQL_CHAR,         0,0, 0, ],
        [ "NUMERIC",                    SQL_NUMERIC,       31,        "", "", "(precision,scale)",    1,0,2,0,0,0,"",0,31,SQL_NUMERIC,      0,0, 0, ],
        [ "DECimal",                    SQL_DECIMAL,       31,        "", "", "(precision,scale)",    1,0,2,0,0,0,"",0,31,SQL_DECIMAL,      0,0, 0, ],
        [ "INTeger",                    SQL_INTEGER,       10,        "", "", "",                     1,0,2,0,0,0,"",0,0, SQL_INTEGER,      0,0, 0, ],
        [ "SMALLINT",                   SQL_SMALLINT,      5,         "", "", "",                     1,0,2,0,0,0,"",0,0, SQL_SMALLINT,     0,0, 0, ],
        [ "FLOAT",                      SQL_FLOAT,         15,        "", "", "(precision)",          1,0,2,0,0,0,"",0,0, SQL_FLOAT,        0,0, 0, ],
        [ "REAL",                       SQL_REAL,          7,         "", "", "",                     1,0,2,0,0,0,"",0,0, SQL_REAL,         0,0, 0, ],
        [ "DOUBLE PRECISION",           SQL_DOUBLE,        15,        "", "", "",                     1,0,2,0,0,0,"",0,0, SQL_DOUBLE,       0,0, 0, ],
        [ "DATE",                       SQL_TYPE_DATE,     10,        "'","'","",                     1,0,2,0,0,0,"",0,0, SQL_DATE,         1,0, 0, ],
        [ "TIME",                       SQL_TYPE_TIME,     8,         "'","'","",                     1,0,2,0,0,0,"",0,0, SQL_DATE,         2,0, 0, ],
        [ "TIMESTAMP",                  SQL_TYPE_TIMESTAMP,26,        "'","'","",                     1,0,2,0,0,0,"",0,0, SQL_DATE,         3,0, 0, ],
        [ "LONGVARCHAR",                SQL_LONGVARCHAR,   32704,     "'","'","(length)",             1,1,3,0,0,0,"",0,0, SQL_LONGVARCHAR,  0,0, 0, ],
        [ "VARCHAR",                    SQL_VARCHAR,       254,       "'","'","(length)",             1,1,3,0,0,0,"",0,0, SQL_VARCHAR,      0,0, 0, ],
    ];

    1;
}

=head1 NAME

DBD::MVS_FTPSQL::TypeInfo - SQL/CLI Constants for TypeInfo.

=head1 SYNOPSIS

  The API for this module is private.

=head1 DESCRIPTION

Information requested by TypeInfo().

=cut


__END__